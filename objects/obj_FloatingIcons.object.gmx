<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = -200;
y = -200;
w_fin_1 = 0;
w_fin_2 = 0;

type[0] = sprite29_ICONS_client_type_cardio;
type[1] = sprite28_ICONS_client_type_chest;
type[2] = sprite27_ICONS_client_type_legs;
type[3] = sprite30_ICONS_client_type_arms;



draw_workout[0] = type[2];
draw_workout[1] = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(draw_workout[0]==0)
    draw_workout[0] = type[0]
else if(draw_workout[0]==1)
    draw_workout[0] = type[1]
else if(draw_workout[0]==2)
    draw_workout[0] = type[2]
else if(draw_workout[0]==3)
    draw_workout[0] = type[3]

if(draw_workout[1]==0)
    draw_workout[1] = type[0]
else if(draw_workout[1]==1)
    draw_workout[1] = type[1]
else if(draw_workout[1]==2)
    draw_workout[1] = type[2]
else if(draw_workout[1]==3)
    draw_workout[1] = type[3]

floating_icon_x = x - 25;
floating_icon_y = y - 60;

draw_sprite(draw_workout[0], 1, floating_icon_x, floating_icon_y);
draw_sprite(draw_workout[1], 1, floating_icon_x+51, floating_icon_y);







    if(w_fin_1 == 1){
        draw_text(floating_icon_x+15, floating_icon_y, "X");
//        show_debug_message("workout 1 finished");
    } 
    if(w_fin_2 == 1){
        draw_text(floating_icon_x+65, floating_icon_y, "X");
//        show_debug_message("workout 2 finished");
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
